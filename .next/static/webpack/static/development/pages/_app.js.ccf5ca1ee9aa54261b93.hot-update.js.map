{"version":3,"file":"static/webpack/static/development/pages/_app.js.ccf5ca1ee9aa54261b93.hot-update.js","sources":["webpack:///./lib/withData.js"],"sourcesContent":["import withApollo from 'next-with-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { endpoint, prodEndpoint } from '../config';\nimport { LOCAL_STATE_QUERY } from '../components/Cart';\n\nfunction createClient({ headers }) {\n\treturn new ApolloClient({\n\t\turi: process.env.NODE_ENV === 'development' ? endpoint : prodEndpoint,\n\t\trequest: operation => {\n\t\t\toperation.setContext({\n\t\t\t\tfetchOptions: {\n\t\t\t\t\tcredentials: 'include'\n\t\t\t\t},\n\t\t\t\theaders\n\t\t\t});\n\t\t},\n\t\t// local data\n\t\tclientState: {\n\t\t\tresolvers: {\n\t\t\t\tMutation: {\n\t\t\t\t\ttoggleCart(_, variables, { cache }) {\n\t\t\t\t\t\t// read the cartOpen value from the cache\n\t\t\t\t\t\tconst { cartOpen } = cache.readQuery({\n\t\t\t\t\t\t\tquery: LOCAL_STATE_QUERY\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// Write the cart State to the opposite\n\t\t\t\t\t\tconst data = {\n\t\t\t\t\t\t\tdata: { cartOpen: !cartOpen }\n\t\t\t\t\t\t};\n\t\t\t\t\t\tcache.writeData(data);\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefaults: {\n\t\t\t\tcartOpen: false\n\t\t\t}\n\t\t}\n\t});\n}\n\nexport default withApollo(createClient);\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAGA;AADA;AAFA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AAZA;AADA;AAgBA;AACA;AADA;AAjBA;AAXA;AAiCA;AACA;AACA;;;;A","sourceRoot":""}