{"version":3,"file":"static/development/pages/login.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/ErrorMessage.js","webpack:///./components/LoggedIn.js","webpack:///./components/Login.js","webpack:///./components/User.js","webpack:///./components/styles/FormStyles.js","webpack:///./pages/login.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"graphql-tag\"","webpack:///external \"next/link\"","webpack:///external \"next/router\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"semantic-ui-react\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","/* eslint-disable react/no-array-index-key */\nimport styled from 'styled-components';\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst ErrorStyles = styled.div`\n  padding: 2rem;\n  background: white;\n  margin: 2rem 0;\n  border: 1px solid rgba(0, 0, 0, 0.05);\n  p {\n    margin: 0;\n    font-weight: 100;\n  }\n  strong {\n    margin-right: 1rem;\n  }\n`;\n\nconst DisplayError = ({ error }) => {\n  if (!error || !error.message) return null;\n  if (error.networkError && error.networkError.result && error.networkError.result.errors.length) {\n    return error.networkError.result.errors.map((error, i) => (\n      <ErrorStyles key={i}>\n        <p data-test=\"graphql-error\">\n          <strong>Oops!</strong>\n          {error.message.replace('GraphQL error: ', '')}\n        </p>\n      </ErrorStyles>\n    ));\n  }\n  return (\n    <ErrorStyles>\n      <p data-test=\"graphql-error\">\n        <strong>Oops</strong>\n        {error.message.replace('GraphQL error: ', '')}\n      </p>\n    </ErrorStyles>\n  );\n};\n\nDisplayError.defaultProps = {\n  error: {},\n};\n\nDisplayError.propTypes = {\n  error: PropTypes.object,\n};\n\nexport default DisplayError;\n","import React from 'react';\nimport { Grid, Message, Image } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport Link from 'next/link';\n\nconst LoggedInStyles = styled.div`\n  position: relative;\n  height: 550px;\n  margin: 0 auto;\n  margin-top: 80px;\n  .ui.centered.grid > .column {\n    text-align: center !important;\n  }\n`;\n\nconst LoggedIn = () => (\n  <LoggedInStyles>\n    <Grid container centered textAlign=\"center\">\n      <Grid.Column width={16}>\n        <Image centered size=\"small\" src=\"https://i.imgur.com/Gcwggjm.png\" alt=\"Grown Logo\" />\n        <Message success header=\"You are signed in\" content=\"Start exploring GROWN today.\" />\n        <div>\n          <Link href=\"/browse\">\n            <a>Browse Farms</a>\n          </Link>\n        </div>\n      </Grid.Column>\n    </Grid>\n  </LoggedInStyles>\n);\n\nexport default LoggedIn;\n","import React, { Component } from 'react';\nimport { Form, Button, Grid, Icon, Message } from 'semantic-ui-react';\nimport Link from 'next/link';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport Router from 'next/router';\nimport User, { CURRENT_USER_QUERY } from './User';\nimport FormStyling from './styles/FormStyles';\nimport Error from './ErrorMessage';\nimport LoggedIn from './LoggedIn';\n\nconst LOGIN_MUTATION = gql`\n  mutation LOGIN_MUTATION($email: String!, $password: String!) {\n    signin(email: $email, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nclass Login extends Component {\n  // State for Form\n  state = {\n    email: '',\n    password: '',\n    completed: false,\n  };\n\n  // Enter Information Value Handler\n  saveToState = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  formComplete = () => {\n    this.setState({ completed: true });\n  };\n\n  render() {\n    return (\n      <Grid container>\n        <User>\n          {({ data: { me } }) => {\n            if (!me)\n              return (\n                <FormStyling>\n                  <h1>\n                    Login to <span>GROWN</span>\n                  </h1>\n                  <Mutation\n                    mutation={LOGIN_MUTATION}\n                    variables={this.state}\n                    onCompleted={this.formComplete}\n                    refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n                  >\n                    {(signin, { loading, error }) => {\n                      if (error) return <Error error={error} />;\n                      return (\n                        <Form\n                          loading={loading}\n                          success={this.state.completed}\n                          method=\"post\"\n                          onSubmit={async e => {\n                            e.preventDefault();\n                            await signin();\n                            this.setState({ email: '', password: '' });\n                            Router.push('/browse');\n                          }}\n                        >\n                          <Message success header=\"You Logged In\" content=\"Start exploring GROWN right now.\" />\n                          <Form.Group>\n                            <Form.Field width={16}>\n                              <label htmlFor=\"email\">\n                                Email\n                                <input\n                                  id=\"email\"\n                                  type=\"email\"\n                                  name=\"email\"\n                                  placeholder=\"Email Address\"\n                                  value={this.state.email}\n                                  onChange={this.saveToState}\n                                />\n                              </label>\n                            </Form.Field>\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Field width={16}>\n                              <label htmlFor=\"password\">\n                                Password\n                                <input\n                                  id=\"password\"\n                                  type=\"password\"\n                                  name=\"password\"\n                                  placeholder=\"Enter Password\"\n                                  value={this.state.password}\n                                  onChange={this.saveToState}\n                                />\n                              </label>\n                            </Form.Field>\n                          </Form.Group>\n                          <Button type=\"submit\" icon labelPosition=\"right\">\n                            Log\n                            {loading ? 'ging' : ''} In\n                            <Icon name=\"right arrow\" />\n                          </Button>\n                        </Form>\n                      );\n                    }}\n                  </Mutation>\n                  <ul>\n                    <li>\n                      <Link href=\"/join\">\n                        <a>Not yet a member?</a>\n                      </Link>\n                    </li>\n                    <li>\n                      <Link href=\"/resetpassword\">\n                        <a>Forgot your password?</a>\n                      </Link>\n                    </li>\n                  </ul>\n                </FormStyling>\n              );\n            if (me) return <LoggedIn />;\n          }}\n        </User>\n      </Grid>\n    );\n  }\n}\n\nexport default Login;\n","import { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\n\nconst CURRENT_USER_QUERY = gql`\n  query {\n    me {\n      id\n      email\n      name\n      permissions\n      cart {\n        id\n        quantity\n        product {\n          id\n          name\n          price\n          unit\n          description\n          farm {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst User = props => (\n  <Query {...props} query={CURRENT_USER_QUERY}>\n    {payload => props.children(payload)}\n  </Query>\n);\n\nUser.propTypes = {\n  children: PropTypes.func.isRequired,\n};\n\nexport default User;\nexport { CURRENT_USER_QUERY };\n","import styled from 'styled-components';\n\nconst FormStyling = styled.div`\n  width: 500px;\n  max-width: 95%;\n  margin: 70px auto 300px;\n  text-align: center;\n  input#price {\n    text-align: right;\n  }\n  ul {\n    list-style-type: none;\n    padding: 0;\n    margin-top: 20px !important;\n  }\n  button {\n    background: ${props => props.theme.lightBlue} !important;\n    color: ${props => props.theme.darkBlue} !important;\n    margin-top: 20px !important;\n  }\n  a {\n    color: ${props => props.theme.regularBlue};\n    font-size: 1.4rem;\n  }\n  li {\n    margin-top: 10px !important;\n  }\n  label {\n    margin-top: 20px !important;\n  }\n  span {\n    font-family: 'Michroma', sans-serif;\n    color: ${props => props.theme.darkBlue};\n  }\n  img {\n    margin: 10px;\n  }\n  div.ui.success.message {\n    margin-top: 10px;\n  }\n`;\n\nexport default FormStyling;\n","import React from 'react';\nimport Login from '../components/Login';\n\nconst UserPage = () => (\n  <div>\n    <Login />\n  </div>\n);\n\nexport default UserPage;\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"next/link\");","module.exports = require(\"next/router\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"semantic-ui-react\");","module.exports = require(\"styled-components\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAaA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AADA;AAIA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AASA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AACA;AAeA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","sourceRoot":""}