{"version":3,"file":"static/development/pages/farm.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/AddToCart.js","webpack:///./components/CreateProduct.js","webpack:///./components/DeleteFarmButton.js","webpack:///./components/DeleteProductButton.js","webpack:///./components/ErrorMessage.js","webpack:///./components/Farm.js","webpack:///./components/FarmMap.js","webpack:///./components/Farms.js","webpack:///./components/IndividualFarm.js","webpack:///./components/Pagination.js","webpack:///./components/Store.js","webpack:///./components/User.js","webpack:///./components/styles/FarmStyles.js","webpack:///./components/styles/IndividualFarmStyles.js","webpack:///./components/styles/PaginationStyles.js","webpack:///./components/styles/StoreStyles.js","webpack:///./config.js","webpack:///./lib/formData.js","webpack:///./pages/farm.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"google-maps-react\"","webpack:///external \"graphql-tag\"","webpack:///external \"next/config\"","webpack:///external \"next/head\"","webpack:///external \"next/link\"","webpack:///external \"next/router\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"react-geocode\"","webpack:///external \"semantic-ui-react\"","webpack:///external \"styled-components\"","webpack:///external \"wowjs\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","import React from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { Button, Icon } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { CURRENT_USER_QUERY } from './User';\n\nconst ADD_TO_CART_MUTATION = gql`\n  mutation addToCart($id: ID!) {\n    addToCart(id: $id) {\n      id\n      quantity\n    }\n  }\n`;\n\nconst AddToCart = ({ id }) => (\n  <Mutation\n    mutation={ADD_TO_CART_MUTATION}\n    variables={{\n      id,\n    }}\n    refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n  >\n    {(addToCart, { loading }) => (\n      <Button icon labelPosition=\"right\" disabled={loading} onClick={addToCart}>\n        Add{loading ? 'ing' : ' '} To Cart\n        <Icon name=\"cart plus\" />\n      </Button>\n    )}\n  </Mutation>\n);\n\nAddToCart.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default AddToCart;\nexport { ADD_TO_CART_MUTATION };\n","import React, { Component } from 'react';\nimport { Form, Button, Icon, Select, Label, Input } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\nimport Error from './ErrorMessage';\nimport unitOptions from '../lib/formData';\nimport { PRODUCTS_QUERY } from './Store';\n\nconst CreateProductStyling = styled.div`\n  margin: 0 auto;\n  button {\n    height: 38px;\n    background-color: ${props => props.theme.lightBlue} !important;\n    margin-top: 23px !important;\n  }\n  i {\n    font-size: 1rem;\n  }\n`;\nconst CREATE_PRODUCT_MUTATION = gql`\n  mutation CREATE_PRODUCT_MUTATION(\n    $name: String!\n    $description: String!\n    $price: Int!\n    $unit: String\n    $farmId: String\n    $image: String\n  ) {\n    createProduct(name: $name, description: $description, price: $price, unit: $unit, farmId: $farmId, image: $image) {\n      id\n    }\n  }\n`;\n\nclass CreateProduct extends Component {\n  // State for Form\n  state = {\n    name: '',\n    unit: '',\n    price: '',\n    description: '',\n    farmId: '',\n  };\n\n  // Enter Information Value Handler\n\n  componentDidMount() {\n    this.setState({ farmId: this.props.id });\n  }\n\n  saveToState = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  selectInput = (e, data) => {\n    this.setState({ unit: data.value });\n  };\n\n  render() {\n    return (\n      <Mutation\n        mutation={CREATE_PRODUCT_MUTATION}\n        variables={this.state}\n        refetchQueries={[\n          {\n            query: PRODUCTS_QUERY,\n            variables: { farmId: this.state.farmId },\n          },\n        ]}\n      >\n        {(createProduct, { error, loading }) => {\n          if (error) return <Error error={error} />;\n          return (\n            <CreateProductStyling>\n              <h3>Add Product to Farm</h3>\n              <Form\n                method=\"post\"\n                loading={loading}\n                onSubmit={async e => {\n                  e.preventDefault();\n                  const res = await createProduct();\n                  this.setState({\n                    name: '',\n                    unit: '',\n                    price: '',\n                    description: '',\n                  });\n                }}\n              >\n                <Form.Group>\n                  <Form.Field width={4}>\n                    <label htmlFor=\"name\">\n                      Product Name\n                      <input\n                        required\n                        type=\"text\"\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder=\"30 Character Limit\"\n                        maxLength=\"30\"\n                        value={this.state.name}\n                        onChange={this.saveToState}\n                      />\n                    </label>\n                  </Form.Field>\n                  <Form.Field width={6}>\n                    <label htmlFor=\"description\">\n                      Product Description - {100 - this.state.description.length} Remaining\n                      <input\n                        required\n                        type=\"text\"\n                        name=\"description\"\n                        id=\"description\"\n                        placeholder=\"100 Character Limit\"\n                        minLength={5}\n                        maxLength={100}\n                        value={this.state.description}\n                        onChange={this.saveToState}\n                      />\n                    </label>\n                  </Form.Field>\n                  <Form.Field width={3}>\n                    <label htmlFor=\"price\">\n                      Price\n                      <Input\n                        required\n                        labelPosition=\"right\"\n                        type=\"number\"\n                        name=\"price\"\n                        id=\"price\"\n                        placeholder=\"Whole Dollars\"\n                        maxLength=\"4\"\n                      >\n                        <Label basic>$</Label>\n                        <input value={this.state.price} onChange={this.saveToState} maxLength=\"4\" />\n                        <Label>.00</Label>\n                      </Input>\n                    </label>\n                  </Form.Field>\n                  <Form.Field\n                    id=\"unit\"\n                    width={2}\n                    control={Select}\n                    options={unitOptions}\n                    value={this.state.unit}\n                    onChange={this.selectInput}\n                    label={{ children: 'Units', htmlFor: 'unit' }}\n                    search\n                    fluid\n                    searchInput={{ id: 'unit' }}\n                  />\n                  <Button type=\"submit\" icon labelPosition=\"right\">\n                    Add\n                    {loading ? 'ing' : ''} <Icon name=\"up arrow\" />\n                  </Button>\n                </Form.Group>\n              </Form>\n            </CreateProductStyling>\n          );\n        }}\n      </Mutation>\n    );\n  }\n}\n\nCreateProduct.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default CreateProduct;\n","/* eslint-disable no-restricted-globals */\n/* eslint-disable no-alert */\nimport React, { Component } from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { ALL_FARMS_QUERY } from './Farms';\n\nconst DeleteButtonStyle = styled.div`\n  .ui.button {\n    background-color: ${props => props.theme.offWhite} !important;\n    font-size: 1.5rem;\n    color: ${props => props.theme.regularBlue};\n    font-family: 'Lato', sans-serif !important;\n    padding-left: 0px;\n    font-weight: 300;\n  }\n  i {\n    color: ${props => props.theme.darkBlue};\n    font-size: 1.8rem;\n  }\n`;\n\nconst DELETE_FARM_MUTATION = gql`\n  mutation DELETE_FARM_MUTATION($id: ID!) {\n    deleteFarm(id: $id) {\n      id\n    }\n  }\n`;\n\nclass DeleteFarmButton extends Component {\n  // Update cache minus deleted farm\n  update = (cache, payload) => {\n    const data = cache.readQuery({ query: ALL_FARMS_QUERY });\n    data.farms = data.farms.filter(farm => farm.id !== payload.data.deleteFarm.id);\n    cache.writeQuery({ query: ALL_FARMS_QUERY, data });\n  };\n\n  render() {\n    return (\n      <Mutation mutation={DELETE_FARM_MUTATION} variables={{ id: this.props.id }} update={this.update}>\n        {(deleteFarm, { error }) => (\n          <DeleteButtonStyle>\n            <Button\n              onClick={() => {\n                if (confirm('Are you sure you want to permanently delete your farm?')) {\n                  deleteFarm().catch(err => {\n                    alert(err.message);\n                  });\n                  Router.push({\n                    pathname: '/browse',\n                  });\n                }\n              }}\n            >\n              <Icon name=\"delete\" />\n              Delete Farm\n            </Button>\n          </DeleteButtonStyle>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nDeleteFarmButton.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default DeleteFarmButton;\n","/* eslint-disable no-restricted-globals */\n/* eslint-disable no-alert */\n\nimport React from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\nimport { INDIVIDUAL_FARM_QUERY } from './IndividualFarm';\n\nconst DELETE_PRODUCT_MUTATION = gql`\n  mutation DELETE_PRODUCT_MUTATION($id: ID!) {\n    deleteProduct(id: $id) {\n      id\n    }\n  }\n`;\n\nconst DeleteProductButton = props => (\n  <Mutation\n    mutation={DELETE_PRODUCT_MUTATION}\n    variables={{ id: props.id }}\n    refetchQueries={[{ query: INDIVIDUAL_FARM_QUERY, variables: { id: props.id } }]}\n  >\n    {(deleteProduct, { error }) => (\n      <Button\n        icon\n        onClick={() => {\n          if (confirm('Are you sure you want to permanently delete your product?')) {\n            deleteProduct().catch(err => {\n              alert(err.message);\n            });\n          }\n        }}\n      >\n        <Icon name=\"delete\" />\n      </Button>\n    )}\n  </Mutation>\n);\n\nDeleteProductButton.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default DeleteProductButton;\n","/* eslint-disable react/no-array-index-key */\nimport styled from 'styled-components';\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst ErrorStyles = styled.div`\n  padding: 2rem;\n  background: white;\n  margin: 2rem 0;\n  border: 1px solid rgba(0, 0, 0, 0.05);\n  p {\n    margin: 0;\n    font-weight: 100;\n  }\n  strong {\n    margin-right: 1rem;\n  }\n`;\n\nconst DisplayError = ({ error }) => {\n  if (!error || !error.message) return null;\n  if (error.networkError && error.networkError.result && error.networkError.result.errors.length) {\n    return error.networkError.result.errors.map((error, i) => (\n      <ErrorStyles key={i}>\n        <p data-test=\"graphql-error\">\n          <strong>Oops!</strong>\n          {error.message.replace('GraphQL error: ', '')}\n        </p>\n      </ErrorStyles>\n    ));\n  }\n  return (\n    <ErrorStyles>\n      <p data-test=\"graphql-error\">\n        <strong>Oops</strong>\n        {error.message.replace('GraphQL error: ', '')}\n      </p>\n    </ErrorStyles>\n  );\n};\n\nDisplayError.defaultProps = {\n  error: {},\n};\n\nDisplayError.propTypes = {\n  error: PropTypes.object,\n};\n\nexport default DisplayError;\n","import React, { Component } from 'react';\nimport { Grid, Image, Icon } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { FarmInfo } from './styles/FarmStyles';\n\nclass Farm extends Component {\n  componentDidMount() {\n    // Mount window for wowjs because of Next's server side rendering\n    if (typeof window !== 'undefined') {\n      // eslint-disable-next-line global-require\n      window.WOW = require('wowjs');\n    }\n    // eslint-disable-next-line no-undef\n    new WOW.WOW({ live: false }).init();\n  }\n\n  render() {\n    const { farm } = this.props;\n    return (\n      <Grid.Column centered=\"true\" mobile={16} tablet={8} computer={8}>\n        <FarmInfo className=\"wow fadeIn\" data-wow-duration=\"2s\">\n          <Image src={farm.image} size=\"large\" />\n          <div className=\"farm-info\">\n            <h3>{farm.name}</h3>\n            <p>\n              <Icon name=\"location arrow\" />\n              {farm.location}\n            </p>\n          </div>\n          <div className=\"farm-link\">\n            <Link\n              href={{\n                pathname: 'farm',\n                query: { id: farm.id },\n              }}\n            >\n              <a>\n                Explore {farm.name} <i className=\"arrow alternate circle right outline icon\" />\n              </a>\n            </Link>\n          </div>\n        </FarmInfo>\n      </Grid.Column>\n    );\n  }\n}\n\nGrid.propTypes = {\n  centered: PropTypes.bool,\n};\n\nFarm.propTypes = {\n  farm: PropTypes.object.isRequired,\n};\n\nexport default Farm;\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-undef */\n/* eslint-disable react/no-unused-state */\nimport React from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport styled from 'styled-components';\nimport Geocode from 'react-geocode';\nimport getConfig from 'next/config';\n\nconst { publicRuntimeConfig } = getConfig();\n\nconst MapDiv = styled.div`\n  margin: 0 auto;\n  padding: 20px 0;\n  margin: 0 auto;\n  left: -3px;\n  height: 300px;\n`;\n\nclass MapContainer extends React.Component {\n  state = {\n    lat: 0,\n    lng: 0,\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {},\n  };\n\n  componentDidMount() {\n    Geocode.setApiKey(`${publicRuntimeConfig.GOOGLE_GEOCODE_API_KEY}`);\n    Geocode.enableDebug();\n    Geocode.fromAddress(this.props.location).then(\n      response => {\n        const { lat, lng } = response.results[0].geometry.location;\n        this.setState({ lat, lng });\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n\n  render() {\n    const style = {\n      height: '250px',\n      width: '90%',\n      display: 'block',\n      border: '2px solid #dda01d',\n      margin: '0 auto',\n      left: '5px',\n      position: 'relative',\n    };\n\n    const divStyle = {\n      position: 'relative',\n    };\n    return (\n      <MapDiv style={divStyle}>\n        <Map\n          google={this.props.google}\n          style={style}\n          initialCenter={{\n            lat: this.state.lat,\n            lng: this.state.long,\n          }}\n          zoom={15}\n          onClick={this.onMapClicked}\n          center={new google.maps.LatLng(this.state.lat, this.state.lng)}\n        >\n          <Marker\n            position={{ lat: this.state.lat, lng: this.state.lng }}\n            onClick={this.onMarkerClick}\n            name={this.props.name}\n          />\n          <InfoWindow onClose={this.onInfoWindowClose} visible>\n            <div>\n              <h1>{this.props.name}</h1>\n            </div>\n          </InfoWindow>\n        </Map>\n      </MapDiv>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: `${publicRuntimeConfig.GOOGLE_MAPS_API_KEY}`,\n})(MapContainer);\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { Grid, Loader, Message, Icon } from 'semantic-ui-react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport { MainArea } from './styles/FarmStyles';\nimport Farm from './Farm';\nimport Pagination from './Pagination';\nimport { perPage } from '../config';\n\n// Graphql Query to get all farms\nconst ALL_FARMS_QUERY = gql`\n\tquery ALL_FARMS_QUERY($skip: Int, $first: Int = ${perPage}) {\n    farms(skip: $skip, first: $first, orderBy: name_DESC) {\n\t\t\tid\n\t\t\tname\n\t\t\tdescription\n\t\t\tlocation\n\t\t\temail\n\t\t\tphone\n\t\t\timage\n\t\t\twebsite\n\t\t}\n\t}\n`;\n\nconst Farms = props => (\n  <MainArea>\n    <Head>\n      <title>GROWN | Browse Farms</title>\n    </Head>\n    <div className=\"browse-header\">\n      <h2>\n        View <span>GROWN</span> Farms\n      </h2>\n      <h3>Browse Fresh Food In Your Area</h3>\n    </div>\n    <Pagination page={props.page} />\n    <div className=\"add-farm-link\">\n      <Link href=\"/createfarm\">\n        <a>\n          Add New Farm <Icon name=\"add circle\" />\n        </a>\n      </Link>\n    </div>\n    <Grid container centered textAlign=\"center\">\n      <Query query={ALL_FARMS_QUERY} variables={{ skip: props.page * perPage - perPage }}>\n        {({ data, error, loading }) => {\n          if (error) return <Message error header=\"Oops...Something Went Awry\" content={error.message} compact />;\n          if (loading) return <Loader active inline />;\n          return (\n            <React.Fragment>\n              {data.farms.map(farm => (\n                <Farm key={farm.id} farm={farm} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Query>\n    </Grid>\n    <Pagination page={props.page} />\n    <div className=\"add-farm-link\">\n      <Link href=\"/createfarm\">\n        <a>\n          Add New Farm <Icon name=\"add circle\" />\n        </a>\n      </Link>\n    </div>\n  </MainArea>\n);\n\nFarms.propTypes = {\n  page: PropTypes.number.isRequired,\n};\n\nexport default Farms;\nexport { ALL_FARMS_QUERY };\n","import React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Loader, Grid, Image, Icon } from 'semantic-ui-react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport MapContainer from './FarmMap';\nimport StyledFarmInfo from './styles/IndividualFarmStyles';\nimport User from './User';\nimport DeleteFarmButton from './DeleteFarmButton';\nimport Store, { PRODUCTS_QUERY } from './Store';\nimport CreateProduct from './CreateProduct';\n\nconst INDIVIDUAL_FARM_QUERY = gql`\n  query INDIVIDUAL_FARM_QUERY($id: ID!) {\n    farm(where: { id: $id }) {\n      id\n      name\n      tagline\n      description\n      location\n      phone\n      email\n      image\n      user {\n        id\n      }\n    }\n  }\n`;\n\nconst IndividualFarm = props => (\n  <User>\n    {({ data: { me } }) => (\n      <Query query={INDIVIDUAL_FARM_QUERY} variables={{ id: props.id }} pollInterval={1000 * 60 * 5}>\n        {({ data, loading, error }) => {\n          if (loading) return <Loader active inline />;\n          if (error) return <p>Error...</p>;\n          const { farm } = data;\n          return (\n            <StyledFarmInfo>\n              <div className=\"farm-header\">\n                <h2>{farm.name}</h2>\n                <h3>Explore and Shop</h3>\n              </div>\n              <Grid container>\n                <Grid.Row>\n                  <Grid.Column mobile={16} computer={8}>\n                    <Image src={farm.image} alt={farm.name} centered />\n                    <h3>{farm.tagline}</h3>\n                    <h3>Explore our great products and more below!</h3>\n                    <div className=\"down-arrow\">\n                      <a href=\"#store-area\">\n                        <Icon name=\"down chevron\" />\n                      </a>\n                    </div>\n                  </Grid.Column>\n                  <Grid.Column mobile={16} computer={8}>\n                    <div className=\"info-box\">\n                      <div className=\"text-info\">\n                        <h4>{farm.name}</h4>\n                        <p>\n                          <Icon name=\"map\" />\n                          {farm.location}\n                        </p>\n                        <p>{farm.description}</p>\n                        <div className=\"phone-email\">\n                          <Icon name=\"mail\" />\n                          <a href={`mailto:${farm.email}`}>{farm.email}</a>\n                        </div>\n                        <div className=\"phone-email\">\n                          <Icon name=\"phone\" />\n                          <a href={`tel:${farm.phone}`}>{farm.phone}</a>\n                        </div>\n                      </div>\n                      <MapContainer location={farm.location} name={farm.name} />\n                    </div>\n                    {me && me.id === farm.user.id && (\n                      <div className=\"edit-farm-link\">\n                        <Link\n                          href={{\n                            pathname: '/updatefarm',\n                            query: { id: farm.id },\n                          }}\n                        >\n                          <a>\n                            <Icon name=\"edit\" />\n                            Edit Farm Information\n                          </a>\n                        </Link>\n                        <DeleteFarmButton id={farm.id} />\n                      </div>\n                    )}\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n              <Grid container centered id=\"store-area\">\n                <Grid.Column width={16}>\n                  <Store id={farm.id} name={farm.name} />\n                  {me && me.id === farm.user.id && <CreateProduct id={farm.id} />}\n                </Grid.Column>\n              </Grid>\n            </StyledFarmInfo>\n          );\n        }}\n      </Query>\n    )}\n  </User>\n);\n\nIndividualFarm.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default IndividualFarm;\nexport { INDIVIDUAL_FARM_QUERY };\n","import React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Link from 'next/link';\nimport { Loader, Message } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport PaginationStyles from './styles/PaginationStyles';\n\n// GQL Query for total farms in db.\nconst PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    farmsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst Pagination = props => (\n  <Query query={PAGINATION_QUERY}>\n    {({ data, loading, error }) => {\n      if (error) {\n        console.log(error);\n        return <Message error header=\"Oops...Something Went Awry\" content={error.message} />;\n      }\n      if (loading) return <Loader active inline />;\n      // Set Pages and Count of total Farms\n      const { count } = data.farmsConnection.aggregate;\n      const pages = Math.ceil(count / 6);\n      const { page } = props;\n      return (\n        <PaginationStyles>\n          <Link\n            prefetch\n            href={{\n              pathname: 'browse',\n              query: { page: page - 1 },\n            }}\n          >\n            <a className=\"prev\" aria-disabled={page <= 1}>\n              &#x2190; Prev\n            </a>\n          </Link>\n          <p>\n            Page {props.page} of {pages}\n          </p>\n          <Link\n            prefetch\n            href={{\n              pathname: 'browse',\n              query: { page: page + 1 },\n            }}\n          >\n            <a className=\"prev\" aria-disabled={page >= pages}>\n              Next &#x2192;\n            </a>\n          </Link>\n        </PaginationStyles>\n      );\n    }}\n  </Query>\n);\n\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n","/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react';\nimport { Table, Icon } from 'semantic-ui-react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport User from './User';\nimport DeleteProductButton from './DeleteProductButton';\nimport AddToCart from './AddToCart';\nimport StoreStyling from './styles/StoreStyles';\n\nconst PRODUCTS_QUERY = gql`\n  query PRODUCTS_QUERY($farmId: String) {\n    products(where: { farmId: $farmId }) {\n      id\n      name\n      price\n      image\n      description\n      unit\n      farm {\n        user {\n          id\n        }\n      }\n    }\n  }\n`;\n\nclass Store extends Component {\n  state = {\n    id: null,\n    updateProduct: false,\n  };\n\n  render() {\n    return (\n      <User>\n        {({ data: { me } }) => (\n          <Query query={PRODUCTS_QUERY} variables={{ farmId: this.props.id }}>\n            {({ data, error }) => {\n              const { products } = data;\n              if (products.length === 0)\n                return (\n                  <StoreStyling>\n                    <Table striped stackable>\n                      <Table.Header>\n                        <Table.Row>\n                          <Table.HeaderCell colSpan=\"6\">\n                            {this.props.name} Store - Add Items to your Cart\n                          </Table.HeaderCell>\n                        </Table.Row>\n                      </Table.Header>\n                      <Table.Body>\n                        <Table.Row>\n                          <Table.Cell collapsing textAlign=\"center\">\n                            No Products Available for Purchase\n                          </Table.Cell>\n                        </Table.Row>\n                      </Table.Body>\n                    </Table>\n                  </StoreStyling>\n                );\n              return (\n                <StoreStyling>\n                  <h2>Purchase {this.props.name} Products</h2>\n                  <Table striped stackable>\n                    <Table.Header>\n                      <Table.Row>\n                        <Table.HeaderCell colSpan=\"6\">\n                          {this.props.name} Store - Add Items to your Cart\n                        </Table.HeaderCell>\n                      </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                      {products.map(product => (\n                        <Table.Row key={product.id}>\n                          <Table.Cell width={3}>{product.name}</Table.Cell>\n                          <Table.Cell width={7}>{product.description}</Table.Cell>\n                          <Table.Cell width={2}>\n                            <Icon name=\"dollar sign\" /> {product.price} / {product.unit}\n                          </Table.Cell>\n                          <Table.Cell textAlign=\"center\" width={3}>\n                            <AddToCart id={product.id} />\n                          </Table.Cell>\n                          {me && me.id === product.farm.user.id && (\n                            <React.Fragment>\n                              <Table.Cell textAlign=\"right\" width={1}>\n                                <Link\n                                  href={{\n                                    pathname: '/updateproduct',\n                                    query: { id: product.id },\n                                  }}\n                                >\n                                  <a>\n                                    <Icon name=\"edit\" />\n                                  </a>\n                                </Link>\n                              </Table.Cell>\n                              <Table.Cell textAlign=\"right\" width={1} className=\"delete-button\">\n                                <DeleteProductButton id={product.id} />\n                              </Table.Cell>\n                            </React.Fragment>\n                          )}\n                        </Table.Row>\n                      ))}\n                    </Table.Body>\n                  </Table>\n                </StoreStyling>\n              );\n            }}\n          </Query>\n        )}\n      </User>\n    );\n  }\n}\n\nStore.propTypes = {\n  value: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default Store;\nexport { PRODUCTS_QUERY };\n","import { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\n\nconst CURRENT_USER_QUERY = gql`\n  query {\n    me {\n      id\n      email\n      name\n      permissions\n      cart {\n        id\n        quantity\n        product {\n          id\n          name\n          price\n          unit\n          description\n          farm {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst User = props => (\n  <Query {...props} query={CURRENT_USER_QUERY}>\n    {payload => props.children(payload)}\n  </Query>\n);\n\nUser.propTypes = {\n  children: PropTypes.func.isRequired,\n};\n\nexport default User;\nexport { CURRENT_USER_QUERY };\n","import styled from 'styled-components';\n\nconst FarmInfo = styled.div`\n  position: relative;\n  width: 94%;\n  border: 2px solid ${props => props.theme.darkBlue};\n  left: 3%;\n  text-align: center;\n  img {\n    max-height: 250px;\n    width: 100% !important;\n    margin: 0;\n  }\n  .farm-link {\n    width: 100%;\n    border-radius: 0 !important;\n    background-color: ${props => props.theme.lightBlue} !important;\n    padding: 15px;\n  }\n  .farm-link a {\n    color: ${props => props.theme.darkBlue} !important;\n    font-size: 1.3rem;\n    font-family: 'Lato', sans-serif;\n  }\n  .farm-info {\n    display: inline-block;\n    text-align: left;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 70%;\n    color: ${props => props.theme.offWhite};\n    text-shadow: 1px 1px 2px ${props => props.theme.black};\n    h3 {\n      width: 100%;\n      margin: 0 0 0 10px;\n      font-family: 'Michroma', sans-serif !important;\n      font-size: 1.5rem;\n      padding: 10px 0;\n      letter-spacing: 0.15rem;\n      line-height: 2rem;\n      border-bottom: 2px solid ${props => props.theme.orange};\n    }\n    h4,\n    p {\n      margin: 0;\n      padding: 0 0 0 10px;\n      font-family: 'Lato', sans-serif;\n      font-size: 1.2rem;\n      letter-spacing: 0.05rem;\n      line-height: 2rem;\n    }\n  }\n`;\n\nconst MainArea = styled.div`\n  text-align: center;\n  h2,\n  h3 {\n    padding: 0 0 20px 0;\n    font-family: 'Michroma', sans-serif;\n    letter-spacing: 0.1rem;\n    width: 50%;\n    margin: 0 auto;\n  }\n  h2 {\n    border-bottom: 2px solid ${props => props.theme.orange};\n  }\n  h3 {\n    padding: 20px 0 30px;\n    border-bottom: none;\n  }\n  span {\n    color: ${props => props.theme.darkBlue};\n  }\n  .browse-header {\n    padding-top: 30px;\n    background-color: ${props => props.theme.lightBlue};\n    border-bottom: 2px solid ${props => props.theme.orange};\n  }\n  .add-farm-link {\n    margin: 0 0 25px;\n    font-size: 1.4rem;\n  }\n`;\n\nexport { FarmInfo, MainArea };\n","import styled from 'styled-components';\n\nconst StyledFarmInfo = styled.div`\n  .farm-header {\n    padding-top: 25px;\n    background-color: ${props => props.theme.lightBlue};\n    border-bottom: 2px solid ${props => props.theme.orange};\n    text-align: center;\n  }\n  h2,\n  h3 {\n    padding: 0 0 15px 0;\n    font-family: 'Michroma', sans-serif;\n    letter-spacing: 0.1rem;\n    width: 50%;\n    margin: 0 auto;\n  }\n  h2 {\n    border-bottom: 2px solid ${props => props.theme.orange};\n  }\n  h3 {\n    padding: 20px 0 30px;\n    border-bottom: none;\n    width: 100%;\n    text-align: center;\n  }\n  h4,\n  p,\n  a {\n    font-family: 'Lato', sans-serif;\n  }\n  h4 {\n    font-size: 2.5rem;\n    font-family: 'Michroma', sans-serif;\n    letter-spacing: 0.1rem;\n  }\n  a {\n    color: ${props => props.theme.regularBlue};\n  }\n  div.eight.wide.computer.sixteen.mobile.column {\n    padding: 40px 0 0 !important;\n  }\n  div.text-info {\n    margin-left: 10px;\n    padding: 0 17px !important;\n    font-family: 'Lato', sans-serif;\n  }\n  .text-info p,\n  .text-info a {\n    font-size: 1.5rem;\n  }\n  .info-box {\n    min-height: 650px;\n  }\n  i {\n    font-size: 1.5rem;\n    margin-right: 10px;\n    color: ${props => props.theme.regularBlue};\n  }\n  ul {\n    list-style-type: none;\n    text-align: center;\n    font-size: 1.5rem;\n    line-height: 3rem;\n    padding: 0;\n    margin: 0 auto;\n    font-family: 'Lato', sans-serif;\n  }\n  .edit-farm-link {\n    padding: 10px 0 10px 22px !important;\n    font-size: 1.5rem;\n    margin-left: 10px;\n  }\n  .phone-email {\n    padding: 7px 0;\n  }\n  div.down-arrow {\n    text-align: center;\n    i {\n      font-size: 4rem;\n    }\n  }\n`;\n\nexport default StyledFarmInfo;\n","import styled from 'styled-components';\n\nconst PaginationStyles = styled.div`\n  font-family: 'Lato', sans-serif;\n  text-align: center;\n  display: inline-grid;\n  grid-template-columns: repeat(4, auto);\n  align-items: stretch;\n  justify-content: center;\n  align-content: center;\n  margin: 2rem 0;\n  border: 2px solid ${props => props.theme.orange};\n  & > * {\n    margin: 0;\n    padding: 15px 30px;\n    border-right: 2px solid ${props => props.theme.orange};\n    &:last-child {\n      border-right: 0;\n    }\n  }\n  a[aria-disabled='true'] {\n    color: grey;\n    pointer-events: none;\n  }\n  a[aria-diaabled='false'] {\n    color: ${props => props.theme.regularBlue};\n  }\n`;\n\nexport default PaginationStyles;\n","import styled from 'styled-components';\n\nconst StoreStyling = styled.div`\n  .ui.table thead th {\n    background: ${props => props.theme.regularBlue} !important;\n    color: white;\n  }\n  button {\n    background: ${props => props.theme.lightBlue} !important;\n    font-size: 1rem;\n    width: 90%;\n  }\n  i {\n    color: ${props => props.theme.darkBlue};\n    font-size: 1.5rem;\n    margin-right: 2px;\n  }\n  h2 {\n    width: 80%;\n    text-align: center;\n  }\n  .delete-button button {\n    background: transparent !important;\n    font-size: 1.5rem;\n    width: 28px;\n    padding: 0px 5px;\n  }\n  button.ui.icon.button {\n    padding: 8px 0;\n    i {\n      font-size: 1.5rem;\n    }\n  }\n`;\n\nexport default StoreStyling;\n","export const endpoint = `http://localhost:4444/`;\nexport const prodEndpoint = 'https://grownfarms-yoga.herokuapp.com/';\nexport const perPage = 6;\n","const unitOptions = [\n  { key: 'm', text: 'lb', value: 'lb' },\n  { key: 'z', text: 'oz', value: 'oz' },\n  { key: 'g', text: 'g', value: 'g' },\n  { key: 'b', text: 'bottle', value: 'bottle' },\n  { key: 't', text: 'bucket', value: 'bucket' },\n  { key: 'j', text: 'jar', value: 'jar' },\n  { key: 'c', text: 'can', value: 'can' },\n  { key: 'k', text: 'kg', value: 'kg' },\n  { key: 'o', text: 'other', value: 'other' },\n];\n\nexport default unitOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IndividualFarm from '../components/IndividualFarm';\n\nconst IndividualFarmPage = props => (\n  <div>\n    <IndividualFarm id={props.query.id} />\n  </div>\n);\n\nIndividualFarmPage.propTypes = {\n  query: PropTypes.object.isRequired,\n};\n\nexport default IndividualFarmPage;\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"google-maps-react\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"next/config\");","module.exports = require(\"next/head\");","module.exports = require(\"next/link\");","module.exports = require(\"next/router\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"react-geocode\");","module.exports = require(\"semantic-ui-react\");","module.exports = require(\"styled-components\");","module.exports = require(\"wowjs\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAQA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AARA;AACA;AAgBA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAOA;AACA;AAcA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AAbA;AAEA;AACA;AAAA;AAAA;AACA;;;AAUA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAFA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAA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AAA;AAKA;AAAA;AAsBA;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAKA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;ACdA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}